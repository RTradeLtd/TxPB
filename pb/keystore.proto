syntax = "proto3";
package pb;

// KeystoreAPI provides a keystore management API
service KeystoreAPI {
    rpc Keystore(KeystoreRequest) returns (KeystoreResponse) { };
}

enum KSREQTYPE {
    KS_HAS = 0;
    KS_GET = 1;
    KS_PUT = 2;
    KS_DELETE = 3;
    KS_LIST = 4;
}

// KeystoreRequest is a message used in any keystore API request
message KeystoreRequest {
    // name of the key the request is for
    // applicable to: has, get, put, delete
    string name = 1;
    // the actual private key
    // applicable to: put
    bytes privateKey = 2;
}

// KeystoreResponse is a responsed to any keystore API request
message KeystoreResponse {
    // a generic status message
    // returned by Has requests, and may or may not
    // be returned by other requests
    string status = 1;
    // the actual private key
    // returned by Get requests
    bytes privateKey = 2;
    // names of keys returned by a List request
    repeated string keyNames = 3;
}