# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import keystore_pb2 as keystore__pb2


class KeystoreAPIStub(object):
  """KeystoreAPI provides a keystore management API
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Has = channel.unary_unary(
        '/pb.KeystoreAPI/Has',
        request_serializer=keystore__pb2.KeystoreRequest.SerializeToString,
        response_deserializer=keystore__pb2.KeystoreResponse.FromString,
        )
    self.Get = channel.unary_unary(
        '/pb.KeystoreAPI/Get',
        request_serializer=keystore__pb2.KeystoreRequest.SerializeToString,
        response_deserializer=keystore__pb2.KeystoreResponse.FromString,
        )
    self.Put = channel.unary_unary(
        '/pb.KeystoreAPI/Put',
        request_serializer=keystore__pb2.KeystoreRequest.SerializeToString,
        response_deserializer=keystore__pb2.KeystoreResponse.FromString,
        )
    self.Delete = channel.unary_unary(
        '/pb.KeystoreAPI/Delete',
        request_serializer=keystore__pb2.KeystoreRequest.SerializeToString,
        response_deserializer=keystore__pb2.KeystoreResponse.FromString,
        )
    self.List = channel.unary_unary(
        '/pb.KeystoreAPI/List',
        request_serializer=keystore__pb2.KeystoreRequest.SerializeToString,
        response_deserializer=keystore__pb2.KeystoreResponse.FromString,
        )


class KeystoreAPIServicer(object):
  """KeystoreAPI provides a keystore management API
  """

  def Has(self, request, context):
    """Has is used to check if we have the key in our store
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Get(self, request, context):
    """Get is used to return a key from our store
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Put(self, request, context):
    """Put is used to store a key in our store
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Delete(self, request, context):
    """Delete is used to remove a key from our store
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def List(self, request, context):
    """List is used to returns all keyIDs of keys in our store
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_KeystoreAPIServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Has': grpc.unary_unary_rpc_method_handler(
          servicer.Has,
          request_deserializer=keystore__pb2.KeystoreRequest.FromString,
          response_serializer=keystore__pb2.KeystoreResponse.SerializeToString,
      ),
      'Get': grpc.unary_unary_rpc_method_handler(
          servicer.Get,
          request_deserializer=keystore__pb2.KeystoreRequest.FromString,
          response_serializer=keystore__pb2.KeystoreResponse.SerializeToString,
      ),
      'Put': grpc.unary_unary_rpc_method_handler(
          servicer.Put,
          request_deserializer=keystore__pb2.KeystoreRequest.FromString,
          response_serializer=keystore__pb2.KeystoreResponse.SerializeToString,
      ),
      'Delete': grpc.unary_unary_rpc_method_handler(
          servicer.Delete,
          request_deserializer=keystore__pb2.KeystoreRequest.FromString,
          response_serializer=keystore__pb2.KeystoreResponse.SerializeToString,
      ),
      'List': grpc.unary_unary_rpc_method_handler(
          servicer.List,
          request_deserializer=keystore__pb2.KeystoreRequest.FromString,
          response_serializer=keystore__pb2.KeystoreResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'pb.KeystoreAPI', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
